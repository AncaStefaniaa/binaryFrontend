{"ast":null,"code":"import _slicedToArray from\"/home/andrei/itfest2019/ionic-react-conference-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef}from'react';import{IonToolbar,IonContent,IonPage,IonButtons,IonMenuButton,IonSegment,IonSegmentButton,IonButton,IonIcon,IonSearchbar,IonRefresher,IonRefresherContent,IonToast,IonModal,IonHeader,getConfig}from'@ionic/react';import{connect}from'../data/connect';import{options}from'ionicons/icons';import SessionList from'../components/SessionList';import SessionListFilter from'../components/SessionListFilter';import'./SchedulePage.scss';import*as selectors from'../data/selectors';import{setSearchText}from'../data/sessions/sessions.actions';import ShareSocialFab from'../components/ShareSocialFab';var SchedulePage=function SchedulePage(_ref){var favoriteGroups=_ref.favoriteGroups,sessionGroups=_ref.sessionGroups,setSearchText=_ref.setSearchText,mode=_ref.mode;var _useState=useState('all'),_useState2=_slicedToArray(_useState,2),segment=_useState2[0],setSegment=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showFilterModal=_useState4[0],setShowFilterModal=_useState4[1];var ionRefresherRef=useRef(null);var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showCompleteToast=_useState6[0],setShowCompleteToast=_useState6[1];var doRefresh=function doRefresh(){setTimeout(function(){ionRefresherRef.current.complete();setShowCompleteToast(true);},2500);};return React.createElement(IonPage,{id:\"schedule-page\"},React.createElement(IonHeader,null,React.createElement(IonToolbar,null,React.createElement(IonButtons,{slot:\"start\"},React.createElement(IonMenuButton,null)),React.createElement(IonSegment,{onIonChange:function onIonChange(e){return setSegment(e.detail.value);}},React.createElement(IonSegmentButton,{value:\"all\",checked:segment==='all'},\"All\"),React.createElement(IonSegmentButton,{value:\"favorites\",checked:segment==='favorites'},\"Favorites\")),React.createElement(IonButtons,{slot:\"end\"},React.createElement(IonButton,{onClick:function onClick(){return setShowFilterModal(true);}},mode==='ios'?'Filter':React.createElement(IonIcon,{icon:options,slot:\"icon-only\"})))),React.createElement(IonToolbar,null,React.createElement(IonSearchbar,{placeholder:\"Search\",onIonChange:function onIonChange(e){return setSearchText(e.detail.value);}}))),React.createElement(IonContent,null,React.createElement(IonRefresher,{slot:\"fixed\",ref:ionRefresherRef,onIonRefresh:doRefresh},React.createElement(IonRefresherContent,null)),React.createElement(IonToast,{isOpen:showCompleteToast,message:\"Refresh complete\",duration:2000,onDidDismiss:function onDidDismiss(){return setShowCompleteToast(false);}}),React.createElement(SessionList,{sessionGroups:sessionGroups,listType:segment,hide:segment==='favorites'}),React.createElement(SessionList,{sessionGroups:favoriteGroups,listType:segment,hide:segment==='all'})),React.createElement(IonModal,{isOpen:showFilterModal,onDidDismiss:function onDidDismiss(){return setShowFilterModal(false);}},React.createElement(SessionListFilter,{onDismissModal:function onDismissModal(){return setShowFilterModal(false);}})),React.createElement(ShareSocialFab,null));};export default connect({mapStateToProps:function mapStateToProps(state){return{sessionGroups:selectors.getGroupedSessions(state),favoriteGroups:selectors.getGroupedFavorites(state),mode:getConfig().get('mode')};},mapDispatchToProps:{setSearchText:setSearchText},component:React.memo(SchedulePage)});","map":{"version":3,"sources":["/home/andrei/itfest2019/ionic-react-conference-app/src/pages/SchedulePage.tsx"],"names":["React","useState","useRef","IonToolbar","IonContent","IonPage","IonButtons","IonMenuButton","IonSegment","IonSegmentButton","IonButton","IonIcon","IonSearchbar","IonRefresher","IonRefresherContent","IonToast","IonModal","IonHeader","getConfig","connect","options","SessionList","SessionListFilter","selectors","setSearchText","ShareSocialFab","SchedulePage","favoriteGroups","sessionGroups","mode","segment","setSegment","showFilterModal","setShowFilterModal","ionRefresherRef","showCompleteToast","setShowCompleteToast","doRefresh","setTimeout","current","complete","e","detail","value","mapStateToProps","state","getGroupedSessions","getGroupedFavorites","get","mapDispatchToProps","component","memo"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { IonToolbar, IonContent, IonPage, IonButtons, IonMenuButton, IonSegment, IonSegmentButton, IonButton, IonIcon, IonSearchbar, IonRefresher, IonRefresherContent, IonToast, IonModal, IonHeader, getConfig } from '@ionic/react';\nimport { connect } from '../data/connect';\nimport { options } from 'ionicons/icons';\nimport SessionList from '../components/SessionList';\nimport SessionListFilter from '../components/SessionListFilter';\nimport './SchedulePage.scss'\nimport * as selectors from '../data/selectors';\nimport { setSearchText, addFavorite, removeFavorite } from '../data/sessions/sessions.actions';\nimport ShareSocialFab from '../components/ShareSocialFab';\nimport { SessionGroup } from '../models/SessionGroup';\n\ninterface OwnProps { }\n\ninterface StateProps {\n  sessionGroups: SessionGroup[];\n  favoriteGroups: SessionGroup[];\n  mode: 'ios' | 'md'\n}\n\ninterface DispatchProps {\n  setSearchText: typeof setSearchText;\n}\n\ntype SchedulePageProps = OwnProps & StateProps & DispatchProps;\n\nconst SchedulePage: React.FC<SchedulePageProps> = ({ favoriteGroups, sessionGroups, setSearchText, mode }) => {\n  const [segment, setSegment] = useState<'all' | 'favorites'>('all');\n  const [showFilterModal, setShowFilterModal] = useState(false);\n  const ionRefresherRef = useRef<HTMLIonRefresherElement>(null);\n  const [showCompleteToast, setShowCompleteToast] = useState(false);\n\n  const doRefresh = () => {\n    setTimeout(() => {\n      ionRefresherRef.current!.complete();\n      setShowCompleteToast(true);\n    }, 2500)\n  };\n\n  return (\n    <IonPage id=\"schedule-page\">\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n\n          <IonSegment onIonChange={(e) => setSegment(e.detail.value as any)}>\n            <IonSegmentButton value=\"all\" checked={segment === 'all'}>\n              All\n            </IonSegmentButton>\n            <IonSegmentButton value=\"favorites\" checked={segment === 'favorites'}>\n              Favorites\n            </IonSegmentButton>\n          </IonSegment>\n\n          <IonButtons slot=\"end\">\n            <IonButton onClick={() => setShowFilterModal(true)}>\n              {mode === 'ios' ? 'Filter' : <IonIcon icon={options} slot=\"icon-only\" />}\n            </IonButton>\n          </IonButtons>\n        </IonToolbar>\n\n        <IonToolbar>\n          <IonSearchbar\n            placeholder=\"Search\"\n            onIonChange={(e: CustomEvent) => setSearchText(e.detail.value)}\n          />\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent>\n        <IonRefresher slot=\"fixed\" ref={ionRefresherRef} onIonRefresh={doRefresh}>\n          <IonRefresherContent />\n        </IonRefresher>\n        <IonToast\n          isOpen={showCompleteToast}\n          message=\"Refresh complete\"\n          duration={2000}\n          onDidDismiss={() => setShowCompleteToast(false)}\n        />\n\n        <SessionList\n          sessionGroups={sessionGroups}\n          listType={segment}\n          hide={segment === 'favorites'}\n        />\n        <SessionList\n          sessionGroups={favoriteGroups}\n          listType={segment}\n          hide={segment === 'all'}\n        />\n      </IonContent>\n\n      <IonModal\n        isOpen={showFilterModal}\n        onDidDismiss={() => setShowFilterModal(false)}\n      >\n        <SessionListFilter\n          onDismissModal={() => setShowFilterModal(false)}\n        />\n      </IonModal>\n\n      <ShareSocialFab />\n\n    </IonPage>\n  );\n};\n\nexport default connect<OwnProps, StateProps, DispatchProps>({\n  mapStateToProps: (state) => ({\n    sessionGroups: selectors.getGroupedSessions(state),\n    favoriteGroups: selectors.getGroupedFavorites(state),\n    mode: getConfig()!.get('mode')\n  }),\n  mapDispatchToProps: {\n    setSearchText\n  },\n  component: React.memo(SchedulePage)\n});"]},"metadata":{},"sourceType":"module"}