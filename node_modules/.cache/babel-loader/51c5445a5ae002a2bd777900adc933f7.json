{"ast":null,"code":"import _slicedToArray from \"/home/andrei/itfest2019/ionic-react-conference-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/andrei/itfest2019/ionic-react-conference-app/src/components/SessionList.tsx\";\nimport { IonItemDivider, IonItemGroup, IonLabel, IonList, IonListHeader, IonAlert } from '@ionic/react';\nimport React, { useState, useCallback } from 'react';\nimport SessionListItem from './SessionListItem';\nimport { Time } from '../components/Time';\nimport { connect } from '../data/connect';\nimport { addFavorite, removeFavorite } from '../data/sessions/sessions.actions';\n;\n\nvar SessionList = function SessionList(_ref) {\n  var addFavorite = _ref.addFavorite,\n      removeFavorite = _ref.removeFavorite,\n      favoriteSessions = _ref.favoriteSessions,\n      hide = _ref.hide,\n      sessionGroups = _ref.sessionGroups,\n      listType = _ref.listType;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showAlert = _useState2[0],\n      setShowAlert = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      alertHeader = _useState4[0],\n      setAlertHeader = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      alertButtons = _useState6[0],\n      setAlertButtons = _useState6[1];\n\n  var handleShowAlert = useCallback(function (header, buttons) {\n    setAlertHeader(header);\n    setAlertButtons(buttons);\n    setShowAlert(true);\n  }, []);\n\n  if (sessionGroups.length === 0 && !hide) {\n    return React.createElement(IonList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(IonListHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"No Sessions Found\"));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(IonList, {\n    style: hide ? {\n      display: 'none'\n    } : {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, sessionGroups.map(function (group, index) {\n    return React.createElement(IonItemGroup, {\n      key: \"group-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(IonItemDivider, {\n      sticky: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(IonLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Time, {\n      date: group.startTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))), group.sessions.map(function (session, sessionIndex) {\n      return React.createElement(SessionListItem, {\n        onShowAlert: handleShowAlert,\n        isFavorite: favoriteSessions.indexOf(session.id) > -1,\n        onAddFavorite: addFavorite,\n        onRemoveFavorite: removeFavorite,\n        key: \"group-\".concat(index, \"-\").concat(sessionIndex),\n        session: session,\n        listType: listType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    }));\n  })), React.createElement(IonAlert, {\n    isOpen: showAlert,\n    header: alertHeader,\n    buttons: alertButtons,\n    onDidDismiss: function onDidDismiss() {\n      return setShowAlert(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }));\n};\n\nexport default connect({\n  mapStateToProps: function mapStateToProps(state) {\n    return {\n      favoriteSessions: state.data.favorites\n    };\n  },\n  mapDispatchToProps: {\n    addFavorite: addFavorite,\n    removeFavorite: removeFavorite\n  },\n  component: SessionList\n});","map":{"version":3,"sources":["/home/andrei/itfest2019/ionic-react-conference-app/src/components/SessionList.tsx"],"names":["IonItemDivider","IonItemGroup","IonLabel","IonList","IonListHeader","IonAlert","React","useState","useCallback","SessionListItem","Time","connect","addFavorite","removeFavorite","SessionList","favoriteSessions","hide","sessionGroups","listType","showAlert","setShowAlert","alertHeader","setAlertHeader","alertButtons","setAlertButtons","handleShowAlert","header","buttons","length","display","map","group","index","startTime","sessions","session","sessionIndex","indexOf","id","mapStateToProps","state","data","favorites","mapDispatchToProps","component"],"mappings":";;AAAA,SAASA,cAAT,EAAyBC,YAAzB,EAAuCC,QAAvC,EAAiDC,OAAjD,EAA0DC,aAA1D,EAAyEC,QAAzE,QAAsG,cAAtG;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,mCAA5C;AAiB0E;;AAE1E,IAAMC,WAAuC,GAAG,SAA1CA,WAA0C,OAAsF;AAAA,MAAnFF,WAAmF,QAAnFA,WAAmF;AAAA,MAAtEC,cAAsE,QAAtEA,cAAsE;AAAA,MAAtDE,gBAAsD,QAAtDA,gBAAsD;AAAA,MAApCC,IAAoC,QAApCA,IAAoC;AAAA,MAA9BC,aAA8B,QAA9BA,aAA8B;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBAElGX,QAAQ,CAAC,KAAD,CAF0F;AAAA;AAAA,MAE7HY,SAF6H;AAAA,MAElHC,YAFkH;;AAAA,mBAG9Fb,QAAQ,CAAC,EAAD,CAHsF;AAAA;AAAA,MAG7Hc,WAH6H;AAAA,MAGhHC,cAHgH;;AAAA,mBAI5Ff,QAAQ,CAA2B,EAA3B,CAJoF;AAAA;AAAA,MAI7HgB,YAJ6H;AAAA,MAI/GC,eAJ+G;;AAMpI,MAAMC,eAAe,GAAGjB,WAAW,CAAC,UAACkB,MAAD,EAAiBC,OAAjB,EAA4C;AAC9EL,IAAAA,cAAc,CAACI,MAAD,CAAd;AACAF,IAAAA,eAAe,CAACG,OAAD,CAAf;AACAP,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAJkC,EAIhC,EAJgC,CAAnC;;AAMA,MAAIH,aAAa,CAACW,MAAd,KAAyB,CAAzB,IAA8B,CAACZ,IAAnC,EAAyC;AACvC,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF;AAOD;;AAED,SACE,0CACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEA,IAAI,GAAG;AAAEa,MAAAA,OAAO,EAAE;AAAX,KAAH,GAAyB,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,aAAa,CAACa,GAAd,CAAkB,UAACC,KAAD,EAAQC,KAAR;AAAA,WACjB,oBAAC,YAAD;AAAc,MAAA,GAAG,kBAAWA,KAAX,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAgB,MAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAED,KAAK,CAACE,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EAMGF,KAAK,CAACG,QAAN,CAAeJ,GAAf,CAAmB,UAACK,OAAD,EAAmBC,YAAnB;AAAA,aAClB,oBAAC,eAAD;AACE,QAAA,WAAW,EAAEX,eADf;AAEE,QAAA,UAAU,EAAEV,gBAAgB,CAACsB,OAAjB,CAAyBF,OAAO,CAACG,EAAjC,IAAuC,CAAC,CAFtD;AAGE,QAAA,aAAa,EAAE1B,WAHjB;AAIE,QAAA,gBAAgB,EAAEC,cAJpB;AAKE,QAAA,GAAG,kBAAWmB,KAAX,cAAoBI,YAApB,CALL;AAME,QAAA,OAAO,EAAED,OANX;AAOE,QAAA,QAAQ,EAAEjB,QAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADkB;AAAA,KAAnB,CANH,CADiB;AAAA,GAAlB,CADH,CADF,EAuBE,oBAAC,QAAD;AACE,IAAA,MAAM,EAAEC,SADV;AAEE,IAAA,MAAM,EAAEE,WAFV;AAGE,IAAA,OAAO,EAAEE,YAHX;AAIE,IAAA,YAAY,EAAE;AAAA,aAAMH,YAAY,CAAC,KAAD,CAAlB;AAAA,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,CADF;AAgCD,CAtDD;;AAwDA,eAAeT,OAAO,CAAC;AACrB4B,EAAAA,eAAe,EAAE,yBAACC,KAAD;AAAA,WAAY;AAC3BzB,MAAAA,gBAAgB,EAAEyB,KAAK,CAACC,IAAN,CAAWC;AADF,KAAZ;AAAA,GADI;AAIrBC,EAAAA,kBAAkB,EAAG;AACnB/B,IAAAA,WAAW,EAAXA,WADmB;AAEnBC,IAAAA,cAAc,EAAdA;AAFmB,GAJA;AAQrB+B,EAAAA,SAAS,EAAE9B;AARU,CAAD,CAAtB","sourcesContent":["import { IonItemDivider, IonItemGroup, IonLabel, IonList, IonListHeader, IonAlert, AlertButton } from '@ionic/react';\nimport React, { useState, useCallback } from 'react';\nimport { Session } from '../models/Session';\nimport SessionListItem from './SessionListItem';\nimport { SessionGroup } from '../models/SessionGroup';\nimport { Time } from '../components/Time';\nimport { connect } from '../data/connect';\nimport { addFavorite, removeFavorite } from '../data/sessions/sessions.actions';\n\ninterface OwnProps {\n  sessionGroups: SessionGroup[]\n  listType: 'all' | 'favorites'\n  hide: boolean;\n}\n\ninterface StateProps {\n  favoriteSessions: number[];\n}\n\ninterface DispatchProps {\n  addFavorite: typeof addFavorite;\n  removeFavorite: typeof removeFavorite;\n}\n\ninterface SessionListProps extends OwnProps, StateProps, DispatchProps { };\n\nconst SessionList: React.FC<SessionListProps> = ({ addFavorite, removeFavorite, favoriteSessions, hide, sessionGroups, listType }) => {\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertHeader, setAlertHeader] = useState('');\n  const [alertButtons, setAlertButtons] = useState<(AlertButton | string)[]>([]);\n\n  const handleShowAlert = useCallback((header: string, buttons: AlertButton[]) => {\n    setAlertHeader(header);\n    setAlertButtons(buttons);\n    setShowAlert(true);\n  }, []);\n\n  if (sessionGroups.length === 0 && !hide) {\n    return (\n      <IonList>\n        <IonListHeader>\n          No Sessions Found\n        </IonListHeader>\n      </IonList>\n    );\n  }\n\n  return (\n    <>\n      <IonList style={hide ? { display: 'none' } : {}}>\n        {sessionGroups.map((group, index: number) => (\n          <IonItemGroup key={`group-${index}`}>\n            <IonItemDivider sticky>\n              <IonLabel>\n                <Time date={group.startTime} />\n              </IonLabel>\n            </IonItemDivider>\n            {group.sessions.map((session: Session, sessionIndex: number) => (\n              <SessionListItem\n                onShowAlert={handleShowAlert}\n                isFavorite={favoriteSessions.indexOf(session.id) > -1}\n                onAddFavorite={addFavorite}\n                onRemoveFavorite={removeFavorite}\n                key={`group-${index}-${sessionIndex}`}\n                session={session}\n                listType={listType}\n              />\n            ))}\n          </IonItemGroup>\n        ))}\n      </IonList>\n      <IonAlert\n        isOpen={showAlert}\n        header={alertHeader}\n        buttons={alertButtons}\n        onDidDismiss={() => setShowAlert(false)}\n      ></IonAlert>\n    </>\n  );\n};\n\nexport default connect({\n  mapStateToProps: (state) => ({\n    favoriteSessions: state.data.favorites\n  }),\n  mapDispatchToProps: ({\n    addFavorite,\n    removeFavorite\n  }),\n  component: SessionList\n});"]},"metadata":{},"sourceType":"module"}