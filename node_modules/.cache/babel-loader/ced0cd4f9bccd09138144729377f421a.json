{"ast":null,"code":"import _toConsumableArray from \"/home/andrei/itfest2019/ionic-react-conference-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/andrei/itfest2019/ionic-react-conference-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var sessionsReducer = function sessionsReducer(state, action) {\n  switch (action.type) {\n    case 'set-conf-loading':\n      {\n        return _objectSpread({}, state, {\n          loading: action.isLoading\n        });\n      }\n\n    case 'set-conf-data':\n      {\n        return _objectSpread({}, state, {}, action.data);\n      }\n\n    case 'add-favorite':\n      {\n        return _objectSpread({}, state, {\n          favorites: [].concat(_toConsumableArray(state.favorites), [action.sessionId])\n        });\n      }\n\n    case 'remove-favorite':\n      {\n        return _objectSpread({}, state, {\n          favorites: _toConsumableArray(state.favorites.filter(function (x) {\n            return x !== action.sessionId;\n          }))\n        });\n      }\n\n    case 'update-filtered-tracks':\n      {\n        return _objectSpread({}, state, {\n          filteredTracks: action.filteredTracks\n        });\n      }\n\n    case 'set-search-text':\n      {\n        return _objectSpread({}, state, {\n          searchText: action.searchText\n        });\n      }\n  }\n};","map":{"version":3,"sources":["/home/andrei/itfest2019/ionic-react-conference-app/src/data/sessions/sessions.reducer.ts"],"names":["sessionsReducer","state","action","type","loading","isLoading","data","favorites","sessionId","filter","x","filteredTracks","searchText"],"mappings":";;;;;;;AAGA,OAAO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAuBC,MAAvB,EAAkE;AAC/F,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,kBAAL;AAAyB;AACvB,iCAAYF,KAAZ;AAAmBG,UAAAA,OAAO,EAAEF,MAAM,CAACG;AAAnC;AACD;;AACD,SAAK,eAAL;AAAsB;AACpB,iCAAYJ,KAAZ,MAAsBC,MAAM,CAACI,IAA7B;AACD;;AACD,SAAK,cAAL;AAAqB;AACnB,iCAAYL,KAAZ;AAAmBM,UAAAA,SAAS,+BAAON,KAAK,CAACM,SAAb,IAAyBL,MAAM,CAACM,SAAhC;AAA5B;AACD;;AACD,SAAK,iBAAL;AAAwB;AACtB,iCAAYP,KAAZ;AAAmBM,UAAAA,SAAS,qBAAON,KAAK,CAACM,SAAP,CAAkBE,MAAlB,CAAyB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,KAAKR,MAAM,CAACM,SAAjB;AAAA,WAA1B,CAAN;AAA5B;AACD;;AACD,SAAK,wBAAL;AAA+B;AAC7B,iCAAYP,KAAZ;AAAmBU,UAAAA,cAAc,EAAET,MAAM,CAACS;AAA1C;AACD;;AACD,SAAK,iBAAL;AAAwB;AACtB,iCAAYV,KAAZ;AAAmBW,UAAAA,UAAU,EAAEV,MAAM,CAACU;AAAtC;AACD;AAlBH;AAoBD,CArBM","sourcesContent":["import { SessionsActions } from './sessions.actions';\nimport { SessionsState } from './sessions.state';\n\nexport const sessionsReducer = (state: SessionsState, action: SessionsActions): SessionsState => {\n  switch (action.type) {\n    case 'set-conf-loading': {\n      return { ...state, loading: action.isLoading };\n    }\n    case 'set-conf-data': {\n      return { ...state, ...action.data };\n    }\n    case 'add-favorite': {\n      return { ...state, favorites: [...(state.favorites), action.sessionId] };\n    }\n    case 'remove-favorite': {\n      return { ...state, favorites: [...(state.favorites).filter(x => x !== action.sessionId)] };\n    }\n    case 'update-filtered-tracks': {\n      return { ...state, filteredTracks: action.filteredTracks };\n    }\n    case 'set-search-text': {\n      return { ...state, searchText: action.searchText };\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}