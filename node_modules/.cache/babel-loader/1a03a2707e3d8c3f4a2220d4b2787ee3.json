{"ast":null,"code":"import _regeneratorRuntime from \"/home/andrei/itfest2019/ionic-react-conference-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/andrei/itfest2019/ionic-react-conference-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { getConfData } from '../dataApi';\nexport var loadConfData = function loadConfData() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch(setLoading(true));\n                _context.next = 3;\n                return getConfData();\n\n              case 3:\n                data = _context.sent;\n                dispatch(setData(data));\n                dispatch(setLoading(false));\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var setLoading = function setLoading(isLoading) {\n  return {\n    type: 'set-conf-loading',\n    isLoading: isLoading\n  };\n};\nexport var setData = function setData(data) {\n  return {\n    type: 'set-conf-data',\n    data: data\n  };\n};\nexport var addFavorite = function addFavorite(sessionId) {\n  return {\n    type: 'add-favorite',\n    sessionId: sessionId\n  };\n};\nexport var removeFavorite = function removeFavorite(sessionId) {\n  return {\n    type: 'remove-favorite',\n    sessionId: sessionId\n  };\n};\nexport var updateFilteredTracks = function updateFilteredTracks(filteredTracks) {\n  return {\n    type: 'update-filtered-tracks',\n    filteredTracks: filteredTracks\n  };\n};\nexport var setSearchText = function setSearchText(searchText) {\n  return {\n    type: 'set-search-text',\n    searchText: searchText\n  };\n};","map":{"version":3,"sources":["/home/andrei/itfest2019/ionic-react-conference-app/src/data/sessions/sessions.actions.ts"],"names":["getConfData","loadConfData","dispatch","setLoading","data","setData","isLoading","type","addFavorite","sessionId","removeFavorite","updateFilteredTracks","filteredTracks","setSearchText","searchText"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,YAA5B;AAIA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChCA,gBAAAA,QAAQ,CAACC,UAAU,CAAC,IAAD,CAAX,CAAR;AADgC;AAAA,uBAEbH,WAAW,EAFE;;AAAA;AAE1BI,gBAAAA,IAF0B;AAGhCF,gBAAAA,QAAQ,CAACG,OAAO,CAACD,IAAD,CAAR,CAAR;AACAF,gBAAAA,QAAQ,CAACC,UAAU,CAAC,KAAD,CAAX,CAAR;;AAJgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AAOP,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACG,SAAD;AAAA,SAAyB;AACjDC,IAAAA,IAAI,EAAE,kBAD2C;AAEjDD,IAAAA,SAAS,EAATA;AAFiD,GAAzB;AAAA,CAAnB;AAKP,OAAO,IAAMD,OAAO,GAAG,SAAVA,OAAU,CAACD,IAAD;AAAA,SAAmC;AACxDG,IAAAA,IAAI,EAAE,eADkD;AAExDH,IAAAA,IAAI,EAAJA;AAFwD,GAAnC;AAAA,CAAhB;AAKP,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD;AAAA,SAAwB;AACjDF,IAAAA,IAAI,EAAE,cAD2C;AAEjDE,IAAAA,SAAS,EAATA;AAFiD,GAAxB;AAAA,CAApB;AAKP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACD,SAAD;AAAA,SAAwB;AACpDF,IAAAA,IAAI,EAAE,iBAD8C;AAEpDE,IAAAA,SAAS,EAATA;AAFoD,GAAxB;AAAA,CAAvB;AAKP,OAAO,IAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,cAAD;AAAA,SAA+B;AACjEL,IAAAA,IAAI,EAAE,wBAD2D;AAEjEK,IAAAA,cAAc,EAAdA;AAFiE,GAA/B;AAAA,CAA7B;AAKP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD;AAAA,SAA0B;AACrDP,IAAAA,IAAI,EAAE,iBAD+C;AAErDO,IAAAA,UAAU,EAAVA;AAFqD,GAA1B;AAAA,CAAtB","sourcesContent":["import { getConfData } from '../dataApi';\nimport { ActionType } from '../../util/types';\nimport { SessionsState } from './sessions.state';\n\nexport const loadConfData = () => async (dispatch: React.Dispatch<any>) => {\n  dispatch(setLoading(true));\n  const data = await getConfData();\n  dispatch(setData(data));\n  dispatch(setLoading(false));\n}\n\nexport const setLoading = (isLoading: boolean) => ({\n  type: 'set-conf-loading',\n  isLoading\n} as const);\n\nexport const setData = (data: Partial<SessionsState>) => ({\n  type: 'set-conf-data',\n  data\n} as const);\n\nexport const addFavorite = (sessionId: number) => ({\n  type: 'add-favorite',\n  sessionId\n} as const);\n\nexport const removeFavorite = (sessionId: number) => ({\n  type: 'remove-favorite',\n  sessionId\n} as const);\n\nexport const updateFilteredTracks = (filteredTracks: string[]) => ({\n  type: 'update-filtered-tracks', \n  filteredTracks \n} as const);\n\nexport const setSearchText = (searchText?: string) => ({ \n  type: 'set-search-text', \n  searchText \n} as const);\n\nexport type SessionsActions =\n  | ActionType<typeof setLoading>\n  | ActionType<typeof setData>\n  | ActionType<typeof addFavorite>\n  | ActionType<typeof removeFavorite>\n  | ActionType<typeof updateFilteredTracks>\n  | ActionType<typeof setSearchText>\n"]},"metadata":{},"sourceType":"module"}