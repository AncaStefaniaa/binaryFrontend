{"ast":null,"code":"var _jsxFileName = \"/home/andrei/itfest2019/ionic-react-conference-app/src/components/SessionListItem.tsx\";\nimport React, { useRef } from 'react';\nimport { IonItemSliding, IonItem, IonLabel, IonItemOptions, IonItemOption } from '@ionic/react';\nimport { Time } from './Time';\n\nvar SessionListItem = function SessionListItem(_ref) {\n  var isFavorite = _ref.isFavorite,\n      onAddFavorite = _ref.onAddFavorite,\n      onRemoveFavorite = _ref.onRemoveFavorite,\n      onShowAlert = _ref.onShowAlert,\n      session = _ref.session,\n      listType = _ref.listType;\n  var ionItemSlidingRef = useRef(null);\n\n  var dismissAlert = function dismissAlert() {\n    ionItemSlidingRef.current && ionItemSlidingRef.current.close();\n  };\n\n  var removeFavoriteSession = function removeFavoriteSession() {\n    onAddFavorite(session.id);\n    onShowAlert('Favorite already added', [{\n      text: 'Cancel',\n      handler: dismissAlert\n    }, {\n      text: 'Remove',\n      handler: function handler() {\n        onRemoveFavorite(session.id);\n        dismissAlert();\n      }\n    }]);\n  };\n\n  var addFavoriteSession = function addFavoriteSession() {\n    if (isFavorite) {\n      // woops, they already favorited it! What shall we do!?\n      // prompt them to remove it\n      removeFavoriteSession();\n    } else {\n      // remember this session as a user favorite\n      onAddFavorite(session.id);\n      onShowAlert('Favorite Added', [{\n        text: 'OK',\n        handler: dismissAlert\n      }]);\n    }\n  };\n\n  return React.createElement(IonItemSliding, {\n    ref: ionItemSlidingRef,\n    class: 'track-' + session.tracks[0].toLowerCase(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(IonItem, {\n    routerLink: \"/tabs/schedule/\".concat(session.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(IonLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, session.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Time, {\n    date: session.dateTimeStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), \" \\u2014\\xA0\", React.createElement(Time, {\n    date: session.dateTimeEnd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), \" \\u2014\\xA0\", session.location))), React.createElement(IonItemOptions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, listType === \"favorites\" ? React.createElement(IonItemOption, {\n    color: \"danger\",\n    onClick: function onClick() {\n      return removeFavoriteSession();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Remove\") : React.createElement(IonItemOption, {\n    color: \"favorite\",\n    onClick: addFavoriteSession,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Favorite\")));\n};\n\nexport default React.memo(SessionListItem);","map":{"version":3,"sources":["/home/andrei/itfest2019/ionic-react-conference-app/src/components/SessionListItem.tsx"],"names":["React","useRef","IonItemSliding","IonItem","IonLabel","IonItemOptions","IonItemOption","Time","SessionListItem","isFavorite","onAddFavorite","onRemoveFavorite","onShowAlert","session","listType","ionItemSlidingRef","dismissAlert","current","close","removeFavoriteSession","id","text","handler","addFavoriteSession","tracks","toLowerCase","name","dateTimeStart","dateTimeEnd","location","memo"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { IonItemSliding, IonAlert, IonItem, IonLabel, IonItemOptions, IonItemOption, AlertButton } from '@ionic/react';\nimport { Time } from './Time';\nimport { Session } from '../models/Session';\n\ninterface SessionListItemProps {\n  session: Session;\n  listType: \"all\" | \"favorites\";\n  onAddFavorite: (id: number) => void;\n  onRemoveFavorite: (id: number) => void;\n  onShowAlert: (header: string, buttons: AlertButton[]) => void;\n  isFavorite: boolean;\n}\n\nconst SessionListItem: React.FC<SessionListItemProps> = ({ isFavorite, onAddFavorite, onRemoveFavorite, onShowAlert, session, listType }) => {\n  const ionItemSlidingRef = useRef<HTMLIonItemSlidingElement>(null)\n  \n  const dismissAlert = () => {\n    ionItemSlidingRef.current && ionItemSlidingRef.current.close();\n  }\n\n  const removeFavoriteSession = () => {\n    onAddFavorite(session.id);\n    onShowAlert('Favorite already added', [\n      {\n        text: 'Cancel',\n        handler: dismissAlert\n      },\n      {\n        text: 'Remove',\n        handler: () => {\n          onRemoveFavorite(session.id);\n          dismissAlert();\n        }\n      }\n    ]);\n  }\n\n  const addFavoriteSession = () => {\n    if (isFavorite) {\n      // woops, they already favorited it! What shall we do!?\n      // prompt them to remove it\n      removeFavoriteSession();\n    } else {\n      // remember this session as a user favorite\n      onAddFavorite(session.id);\n      onShowAlert('Favorite Added', [\n        {\n          text: 'OK',\n          handler: dismissAlert\n        }\n      ]);\n    }\n  };\n\n  return (\n    <IonItemSliding ref={ionItemSlidingRef} class={'track-' + session.tracks[0].toLowerCase()}>\n      <IonItem routerLink={`/tabs/schedule/${session.id}`}>\n        <IonLabel>\n          <h3>{session.name}</h3>\n          <p>\n            <Time date={session.dateTimeStart} /> &mdash;&nbsp;\n            <Time date={session.dateTimeEnd} /> &mdash;&nbsp;\n            {session.location}\n          </p>\n        </IonLabel>\n      </IonItem>\n      <IonItemOptions>\n        {listType === \"favorites\" ?\n          <IonItemOption color=\"danger\" onClick={() => removeFavoriteSession()}>\n            Remove\n          </IonItemOption>\n          :\n          <IonItemOption color=\"favorite\" onClick={addFavoriteSession}>\n            Favorite\n          </IonItemOption>\n        }\n      </IonItemOptions>\n    </IonItemSliding>\n  );\n};\n\nexport default React.memo(SessionListItem);"]},"metadata":{},"sourceType":"module"}