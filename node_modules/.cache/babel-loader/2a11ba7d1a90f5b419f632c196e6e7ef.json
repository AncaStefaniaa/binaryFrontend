{"ast":null,"code":"import{createSelector}from'reselect';import{parseISO as parseDate}from'date-fns';var getSessions=function getSessions(state){return state.data.sessions;};export var getSpeakers=function getSpeakers(state){return state.data.speakers;};var getFilteredTracks=function getFilteredTracks(state){return state.data.filteredTracks;};var getFavoriteIds=function getFavoriteIds(state){return state.data.favorites;};var getSearchText=function getSearchText(state){return state.data.searchText;};export var getFilteredSessions=createSelector(getSessions,getFilteredTracks,function(sessions,filteredTracks){return sessions.filter(function(session){var include=false;session.tracks.forEach(function(track){if(filteredTracks.indexOf(track)>-1){include=true;}});return include;});});export var getSearchedSessions=createSelector(getFilteredSessions,getSearchText,function(sessions,searchText){if(!searchText){return sessions;}return sessions.filter(function(session){return session.name.toLowerCase().indexOf(searchText.toLowerCase())>-1;});});export var getGroupedSessions=createSelector(getSearchedSessions,function(sessions){return groupSessions(sessions);});export var getFavorites=createSelector(getSearchedSessions,getFavoriteIds,function(sessions,favoriteIds){return sessions.filter(function(x){return favoriteIds.indexOf(x.id)>-1;});});export var getGroupedFavorites=createSelector(getFavorites,function(sessions){return groupSessions(sessions);});var getIdParam=function getIdParam(_state,props){var stringParam=props.match.params['id'];return parseInt(stringParam,10);};export var getSession=createSelector(getSessions,getIdParam,function(sessions,id){return sessions.find(function(x){return x.id===id;});});function groupSessions(sessions){return sessions.sort(function(a,b){return parseDate(a.dateTimeStart).valueOf()-parseDate(b.dateTimeStart).valueOf();}).reduce(function(groups,session){var starterHour=parseDate(session.dateTimeStart);starterHour.setMinutes(0);starterHour.setSeconds(0);var starterHourStr=starterHour.toJSON();var foundGroup=groups.find(function(group){return group.startTime===starterHourStr;});if(foundGroup){foundGroup.sessions.push(session);}else{groups.push({startTime:starterHourStr,sessions:[session]});}return groups;},[]);}export var getSpeaker=createSelector(getSpeakers,getIdParam,function(speakers,id){return speakers.find(function(x){return x.id===id;});});export var getSpeakerSessions=createSelector(getSessions,function(sessions){var speakerSessions={};sessions.forEach(function(session){session.speakerIds.forEach(function(speakerId){if(speakerSessions[speakerId]){speakerSessions[speakerId].push(session);}else{speakerSessions[speakerId]=[session];}});});return speakerSessions;});export var mapCenter=function mapCenter(state){var item=state.data.locations.find(function(l){return l.id===state.data.mapCenterId;});if(item==null){return{id:1,name:'Map Center',lat:43.071584,lng:-89.380120};}return item;};","map":{"version":3,"sources":["/home/andrei/itfest2019/ionic-react-conference-app/src/data/selectors.ts"],"names":["createSelector","parseISO","parseDate","getSessions","state","data","sessions","getSpeakers","speakers","getFilteredTracks","filteredTracks","getFavoriteIds","favorites","getSearchText","searchText","getFilteredSessions","filter","session","include","tracks","forEach","track","indexOf","getSearchedSessions","name","toLowerCase","getGroupedSessions","groupSessions","getFavorites","favoriteIds","x","id","getGroupedFavorites","getIdParam","_state","props","stringParam","match","params","parseInt","getSession","find","sort","a","b","dateTimeStart","valueOf","reduce","groups","starterHour","setMinutes","setSeconds","starterHourStr","toJSON","foundGroup","group","startTime","push","getSpeaker","getSpeakerSessions","speakerSessions","speakerIds","speakerId","mapCenter","item","locations","l","mapCenterId","lat","lng"],"mappings":"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","sourcesContent":["import { createSelector } from 'reselect';\nimport { parseISO as parseDate } from 'date-fns';\nimport { Session } from '../models/Session';\nimport { SessionGroup } from '../models/SessionGroup';\nimport { AppState } from './state';\n\nconst getSessions = (state: AppState) => state.data.sessions;\nexport const getSpeakers = (state: AppState) => state.data.speakers;\nconst getFilteredTracks = (state: AppState) => state.data.filteredTracks;\nconst getFavoriteIds = (state: AppState) => state.data.favorites;\nconst getSearchText = (state: AppState) => state.data.searchText;\n\nexport const getFilteredSessions = createSelector(\n  getSessions, getFilteredTracks,\n  (sessions, filteredTracks) => {\n    return sessions.filter(session => {\n      let include = false;\n      session.tracks.forEach(track => {\n        if (filteredTracks.indexOf(track) > -1) {\n          include = true;\n        }\n      });\n      return include;\n    });\n  }\n);\n\nexport const getSearchedSessions = createSelector(\n  getFilteredSessions, getSearchText,\n  (sessions, searchText) => {\n    if (!searchText) {\n      return sessions;\n    }\n    return sessions.filter(session => session.name.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\n  }\n)\n\nexport const getGroupedSessions = createSelector(\n  getSearchedSessions,\n  (sessions) => {\n    return groupSessions(sessions);\n  }\n);\n\nexport const getFavorites = createSelector(\n  getSearchedSessions, getFavoriteIds,\n  (sessions, favoriteIds) => sessions.filter(x => favoriteIds.indexOf(x.id) > -1)\n);\n\nexport const getGroupedFavorites = createSelector(\n  getFavorites,\n  (sessions) => {\n    return groupSessions(sessions);\n  }\n)\n\nconst getIdParam = (_state: AppState, props: any) => {\n  const stringParam = props.match.params['id'];\n  return parseInt(stringParam, 10);\n}\n\nexport const getSession = createSelector(\n  getSessions, getIdParam,\n  (sessions, id) => sessions.find(x => x.id === id)\n);\n\nfunction groupSessions(sessions: Session[]) {\n  return sessions\n    .sort((a, b) => (\n      parseDate(a.dateTimeStart).valueOf() - parseDate(b.dateTimeStart).valueOf()\n    ))\n    .reduce((groups, session) => {\n      let starterHour = parseDate(session.dateTimeStart);\n      starterHour.setMinutes(0);\n      starterHour.setSeconds(0);\n      const starterHourStr = starterHour.toJSON();\n      const foundGroup = groups.find(group => group.startTime === starterHourStr);\n      if (foundGroup) {\n        foundGroup.sessions.push(session);\n      } else {\n        groups.push({\n          startTime: starterHourStr,\n          sessions: [session]\n        });\n      }\n      return groups;\n    }, [] as SessionGroup[]);\n}\n\nexport const getSpeaker = createSelector(\n  getSpeakers, getIdParam,\n  (speakers, id) => speakers.find(x => x.id === id)\n);\n\nexport const getSpeakerSessions = createSelector(\n  getSessions,\n  (sessions) => {\n    const speakerSessions: {[key: number]: Session[]} = {};\n    sessions.forEach(session => {\n      session.speakerIds.forEach(speakerId => {\n        if(speakerSessions[speakerId]) {\n          speakerSessions[speakerId].push(session);\n        } else {\n          speakerSessions[speakerId] = [session];\n        }\n      })\n    });\n    return speakerSessions;\n  }\n);\n\nexport const mapCenter = (state: AppState) => {\n  const item = state.data.locations.find(l => l.id === state.data.mapCenterId);\n  if (item == null) {\n    return {\n      id: 1,\n      name: 'Map Center',\n      lat: 43.071584,\n      lng: -89.380120\n    };\n  }\n  return item;\n}\n"]},"metadata":{},"sourceType":"module"}