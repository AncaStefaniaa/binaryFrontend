{"ast":null,"code":"var _jsxFileName = \"/home/andrei/itfest2019/ionic-react-conference-app/src/pages/SpeakerDetail.tsx\";\nimport React from 'react';\nimport { IonIcon, IonHeader, IonToolbar, IonButtons, IonTitle, IonContent, IonButton, IonBackButton, IonPage } from '@ionic/react';\nimport './SpeakerDetail.scss';\nimport { logoTwitter, logoGithub, logoInstagram } from 'ionicons/icons';\nimport { connect } from '../data/connect';\nimport * as selectors from '../data/selectors';\n;\n;\n;\n;\n\nvar SpeakerDetail = function SpeakerDetail(_ref) {\n  var speaker = _ref.speaker;\n\n  if (!speaker) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Speaker not found\");\n  }\n\n  return React.createElement(IonPage, {\n    id: \"speaker-detail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(IonHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(IonToolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(IonButtons, {\n    slot: \"start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(IonBackButton, {\n    defaultHref: \"/tabs/speakers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(IonTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, speaker.name))), React.createElement(IonContent, {\n    className: \"ion-padding speaker-detail speaker-page-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ion-text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: speaker.profilePic,\n    alt: speaker.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(IonButton, {\n    fill: \"clear\",\n    size: \"small\",\n    color: \"twitter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(IonIcon, {\n    icon: logoTwitter,\n    slot: \"icon-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(IonButton, {\n    fill: \"clear\",\n    size: \"small\",\n    color: \"github\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(IonIcon, {\n    icon: logoGithub,\n    slot: \"icon-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(IonButton, {\n    fill: \"clear\",\n    size: \"small\",\n    color: \"instagram\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(IonIcon, {\n    icon: logoInstagram,\n    slot: \"icon-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, speaker.about)));\n};\n\nexport default connect({\n  mapStateToProps: function mapStateToProps(state, ownProps) {\n    return {\n      speaker: selectors.getSpeaker(state, ownProps)\n    };\n  },\n  component: SpeakerDetail\n});","map":{"version":3,"sources":["/home/andrei/itfest2019/ionic-react-conference-app/src/pages/SpeakerDetail.tsx"],"names":["React","IonIcon","IonHeader","IonToolbar","IonButtons","IonTitle","IonContent","IonButton","IonBackButton","IonPage","logoTwitter","logoGithub","logoInstagram","connect","selectors","SpeakerDetail","speaker","name","profilePic","about","mapStateToProps","state","ownProps","getSpeaker","component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { IonIcon, IonHeader, IonToolbar, IonButtons, IonTitle, IonContent, IonButton, IonBackButton, IonPage } from '@ionic/react'\nimport './SpeakerDetail.scss';\nimport { logoTwitter, logoGithub, logoInstagram } from 'ionicons/icons';\nimport { connect } from '../data/connect';\nimport * as selectors from '../data/selectors';\nimport { Speaker } from '../models/Speaker';\n\ninterface OwnProps extends RouteComponentProps {\n  speaker?: Speaker;\n};\n\ninterface StateProps {};\n\ninterface DispatchProps {};\n\ninterface SpeakerDetailProps extends OwnProps, StateProps, DispatchProps {};\n\nconst SpeakerDetail: React.FC<SpeakerDetailProps> = ({ speaker }) => {\n  \n  if (!speaker) {\n    return <div>Speaker not found</div>\n  }\n\n  return (\n    <IonPage id=\"speaker-detail\">\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonBackButton defaultHref=\"/tabs/speakers\" />\n          </IonButtons>\n          <IonTitle>{speaker.name}</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent className=\"ion-padding speaker-detail speaker-page-list\">\n        <div className=\"ion-text-center\">\n          <img src={speaker.profilePic} alt={speaker.name} />\n          <br />\n          <IonButton fill=\"clear\" size=\"small\" color=\"twitter\">\n            <IonIcon icon={logoTwitter} slot=\"icon-only\"></IonIcon>\n          </IonButton>\n          <IonButton fill=\"clear\" size=\"small\" color=\"github\">\n            <IonIcon icon={logoGithub} slot=\"icon-only\"></IonIcon>\n          </IonButton>\n          <IonButton fill=\"clear\" size=\"small\" color=\"instagram\">\n            <IonIcon icon={logoInstagram} slot=\"icon-only\"></IonIcon>\n          </IonButton>\n        </div>\n\n        <p>{speaker.about}</p>\n      </IonContent>\n    </IonPage>\n  );\n};\n\n\nexport default connect({\n  mapStateToProps: (state, ownProps) => ({\n    speaker: selectors.getSpeaker(state, ownProps)\n  }),\n  component: SpeakerDetail\n});\n"]},"metadata":{},"sourceType":"module"}