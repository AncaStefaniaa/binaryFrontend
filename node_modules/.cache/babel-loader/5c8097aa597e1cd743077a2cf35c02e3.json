{"ast":null,"code":"import React,{useRef}from'react';import{IonItemSliding,IonItem,IonLabel,IonItemOptions,IonItemOption}from'@ionic/react';import{Time}from'./Time';var SessionListItem=function SessionListItem(_ref){var isFavorite=_ref.isFavorite,onAddFavorite=_ref.onAddFavorite,onRemoveFavorite=_ref.onRemoveFavorite,onShowAlert=_ref.onShowAlert,session=_ref.session,listType=_ref.listType;var ionItemSlidingRef=useRef(null);var dismissAlert=function dismissAlert(){ionItemSlidingRef.current&&ionItemSlidingRef.current.close();};var removeFavoriteSession=function removeFavoriteSession(){onAddFavorite(session.id);onShowAlert('Favorite already added',[{text:'Cancel',handler:dismissAlert},{text:'Remove',handler:function handler(){onRemoveFavorite(session.id);dismissAlert();}}]);};var addFavoriteSession=function addFavoriteSession(){if(isFavorite){// woops, they already favorited it! What shall we do!?\n// prompt them to remove it\nremoveFavoriteSession();}else{// remember this session as a user favorite\nonAddFavorite(session.id);onShowAlert('Favorite Added',[{text:'OK',handler:dismissAlert}]);}};return React.createElement(IonItemSliding,{ref:ionItemSlidingRef,class:'track-'+session.tracks[0].toLowerCase()},React.createElement(IonItem,{routerLink:\"/tabs/schedule/\".concat(session.id)},React.createElement(IonLabel,null,React.createElement(\"h3\",null,session.name),React.createElement(\"p\",null,React.createElement(Time,{date:session.dateTimeStart}),\" \\u2014\\xA0\",React.createElement(Time,{date:session.dateTimeEnd}),\" \\u2014\\xA0\",session.location))),React.createElement(IonItemOptions,null,listType===\"favorites\"?React.createElement(IonItemOption,{color:\"danger\",onClick:function onClick(){return removeFavoriteSession();}},\"Remove\"):React.createElement(IonItemOption,{color:\"favorite\",onClick:addFavoriteSession},\"Favorite\")));};export default React.memo(SessionListItem);","map":{"version":3,"sources":["/home/andrei/itfest2019/ionic-react-conference-app/src/components/SessionListItem.tsx"],"names":["React","useRef","IonItemSliding","IonItem","IonLabel","IonItemOptions","IonItemOption","Time","SessionListItem","isFavorite","onAddFavorite","onRemoveFavorite","onShowAlert","session","listType","ionItemSlidingRef","dismissAlert","current","close","removeFavoriteSession","id","text","handler","addFavoriteSession","tracks","toLowerCase","name","dateTimeStart","dateTimeEnd","location","memo"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,KAAwC,OAAxC,CACA,OAASC,cAAT,CAAmCC,OAAnC,CAA4CC,QAA5C,CAAsDC,cAAtD,CAAsEC,aAAtE,KAAwG,cAAxG,CACA,OAASC,IAAT,KAAqB,QAArB,CAYA,GAAMC,CAAAA,eAA+C,CAAG,QAAlDA,CAAAA,eAAkD,MAAqF,IAAlFC,CAAAA,UAAkF,MAAlFA,UAAkF,CAAtEC,aAAsE,MAAtEA,aAAsE,CAAvDC,gBAAuD,MAAvDA,gBAAuD,CAArCC,WAAqC,MAArCA,WAAqC,CAAxBC,OAAwB,MAAxBA,OAAwB,CAAfC,QAAe,MAAfA,QAAe,CAC3I,GAAMC,CAAAA,iBAAiB,CAAGd,MAAM,CAA4B,IAA5B,CAAhC,CAEA,GAAMe,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBD,iBAAiB,CAACE,OAAlB,EAA6BF,iBAAiB,CAACE,OAAlB,CAA0BC,KAA1B,EAA7B,CACD,CAFD,CAIA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAM,CAClCT,aAAa,CAACG,OAAO,CAACO,EAAT,CAAb,CACAR,WAAW,CAAC,wBAAD,CAA2B,CACpC,CACES,IAAI,CAAE,QADR,CAEEC,OAAO,CAAEN,YAFX,CADoC,CAKpC,CACEK,IAAI,CAAE,QADR,CAEEC,OAAO,CAAE,kBAAM,CACbX,gBAAgB,CAACE,OAAO,CAACO,EAAT,CAAhB,CACAJ,YAAY,GACb,CALH,CALoC,CAA3B,CAAX,CAaD,CAfD,CAiBA,GAAMO,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/B,GAAId,UAAJ,CAAgB,CACd;AACA;AACAU,qBAAqB,GACtB,CAJD,IAIO,CACL;AACAT,aAAa,CAACG,OAAO,CAACO,EAAT,CAAb,CACAR,WAAW,CAAC,gBAAD,CAAmB,CAC5B,CACES,IAAI,CAAE,IADR,CAEEC,OAAO,CAAEN,YAFX,CAD4B,CAAnB,CAAX,CAMD,CACF,CAfD,CAiBA,MACE,qBAAC,cAAD,EAAgB,GAAG,CAAED,iBAArB,CAAwC,KAAK,CAAE,SAAWF,OAAO,CAACW,MAAR,CAAe,CAAf,EAAkBC,WAAlB,EAA1D,EACE,oBAAC,OAAD,EAAS,UAAU,0BAAoBZ,OAAO,CAACO,EAA5B,CAAnB,EACE,oBAAC,QAAD,MACE,8BAAKP,OAAO,CAACa,IAAb,CADF,CAEE,6BACE,oBAAC,IAAD,EAAM,IAAI,CAAEb,OAAO,CAACc,aAApB,EADF,eAEE,oBAAC,IAAD,EAAM,IAAI,CAAEd,OAAO,CAACe,WAApB,EAFF,eAGGf,OAAO,CAACgB,QAHX,CAFF,CADF,CADF,CAWE,oBAAC,cAAD,MACGf,QAAQ,GAAK,WAAb,CACC,oBAAC,aAAD,EAAe,KAAK,CAAC,QAArB,CAA8B,OAAO,CAAE,yBAAMK,CAAAA,qBAAqB,EAA3B,EAAvC,WADD,CAKC,oBAAC,aAAD,EAAe,KAAK,CAAC,UAArB,CAAgC,OAAO,CAAEI,kBAAzC,aANJ,CAXF,CADF,CAyBD,CAlED,CAoEA,cAAevB,CAAAA,KAAK,CAAC8B,IAAN,CAAWtB,eAAX,CAAf","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { IonItemSliding, IonAlert, IonItem, IonLabel, IonItemOptions, IonItemOption, AlertButton } from '@ionic/react';\nimport { Time } from './Time';\nimport { Session } from '../models/Session';\n\ninterface SessionListItemProps {\n  session: Session;\n  listType: \"all\" | \"favorites\";\n  onAddFavorite: (id: number) => void;\n  onRemoveFavorite: (id: number) => void;\n  onShowAlert: (header: string, buttons: AlertButton[]) => void;\n  isFavorite: boolean;\n}\n\nconst SessionListItem: React.FC<SessionListItemProps> = ({ isFavorite, onAddFavorite, onRemoveFavorite, onShowAlert, session, listType }) => {\n  const ionItemSlidingRef = useRef<HTMLIonItemSlidingElement>(null)\n  \n  const dismissAlert = () => {\n    ionItemSlidingRef.current && ionItemSlidingRef.current.close();\n  }\n\n  const removeFavoriteSession = () => {\n    onAddFavorite(session.id);\n    onShowAlert('Favorite already added', [\n      {\n        text: 'Cancel',\n        handler: dismissAlert\n      },\n      {\n        text: 'Remove',\n        handler: () => {\n          onRemoveFavorite(session.id);\n          dismissAlert();\n        }\n      }\n    ]);\n  }\n\n  const addFavoriteSession = () => {\n    if (isFavorite) {\n      // woops, they already favorited it! What shall we do!?\n      // prompt them to remove it\n      removeFavoriteSession();\n    } else {\n      // remember this session as a user favorite\n      onAddFavorite(session.id);\n      onShowAlert('Favorite Added', [\n        {\n          text: 'OK',\n          handler: dismissAlert\n        }\n      ]);\n    }\n  };\n\n  return (\n    <IonItemSliding ref={ionItemSlidingRef} class={'track-' + session.tracks[0].toLowerCase()}>\n      <IonItem routerLink={`/tabs/schedule/${session.id}`}>\n        <IonLabel>\n          <h3>{session.name}</h3>\n          <p>\n            <Time date={session.dateTimeStart} /> &mdash;&nbsp;\n            <Time date={session.dateTimeEnd} /> &mdash;&nbsp;\n            {session.location}\n          </p>\n        </IonLabel>\n      </IonItem>\n      <IonItemOptions>\n        {listType === \"favorites\" ?\n          <IonItemOption color=\"danger\" onClick={() => removeFavoriteSession()}>\n            Remove\n          </IonItemOption>\n          :\n          <IonItemOption color=\"favorite\" onClick={addFavoriteSession}>\n            Favorite\n          </IonItemOption>\n        }\n      </IonItemOptions>\n    </IonItemSliding>\n  );\n};\n\nexport default React.memo(SessionListItem);"]},"metadata":{},"sourceType":"module"}