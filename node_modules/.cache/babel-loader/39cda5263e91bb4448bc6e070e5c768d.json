{"ast":null,"code":"import _slicedToArray from \"/home/andrei/itfest2019/ionic-react-conference-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/andrei/itfest2019/ionic-react-conference-app/src/components/Menu.tsx\";\nimport { IonContent, IonHeader, IonIcon, IonItem, IonLabel, IonList, IonListHeader, IonMenu, IonMenuToggle, IonTitle, IonToolbar, IonToggle } from '@ionic/react';\nimport { calendar, contacts, hammer, help, informationCircle, logIn, logOut, map, person, personAdd } from 'ionicons/icons';\nimport React, { useState } from 'react';\nimport { connect } from '../data/connect';\nimport { withRouter } from 'react-router';\nimport { setDarkMode } from '../data/user/user.actions';\nvar routes = {\n  appPages: [{\n    title: 'Schedule',\n    path: '/tabs/schedule',\n    icon: calendar\n  }, {\n    title: 'Speakers',\n    path: '/tabs/speakers',\n    icon: contacts\n  }, {\n    title: 'Map',\n    path: '/tabs/map',\n    icon: map\n  }, {\n    title: 'About',\n    path: '/tabs/about',\n    icon: informationCircle\n  }],\n  loggedInPages: [{\n    title: 'Account',\n    path: '/account',\n    icon: person\n  }, {\n    title: 'Support',\n    path: '/support',\n    icon: help\n  }, {\n    title: 'Logout',\n    path: '/logout',\n    icon: logOut\n  }],\n  loggedOutPages: [{\n    title: 'Login',\n    path: '/login',\n    icon: logIn\n  }, {\n    title: 'Support',\n    path: '/support',\n    icon: help\n  }, {\n    title: 'Signup',\n    path: '/signup',\n    icon: personAdd\n  }]\n};\n\nvar Menu = function Menu(_ref) {\n  var darkMode = _ref.darkMode,\n      history = _ref.history,\n      isAuthenticated = _ref.isAuthenticated,\n      setDarkMode = _ref.setDarkMode;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      disableMenu = _useState2[0],\n      setDisableMenu = _useState2[1];\n\n  function renderlistItems(list) {\n    return list.filter(function (route) {\n      return !!route.path;\n    }).map(function (p) {\n      return React.createElement(IonMenuToggle, {\n        key: p.title,\n        \"auto-hide\": \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(IonItem, {\n        button: true,\n        routerLink: p.path,\n        routerDirection: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(IonIcon, {\n        slot: \"start\",\n        icon: p.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(IonLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, p.title)));\n    });\n  }\n\n  return React.createElement(IonMenu, {\n    type: \"overlay\",\n    disabled: disableMenu,\n    contentId: \"main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(IonHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(IonToolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(IonTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Menu\"))), React.createElement(IonContent, {\n    class: \"outer-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(IonList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(IonListHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Navigate\"), renderlistItems(routes.appPages)), React.createElement(IonList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(IonListHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Account\"), isAuthenticated ? renderlistItems(routes.loggedInPages) : renderlistItems(routes.loggedOutPages)), React.createElement(IonList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(IonListHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Tutorial\"), React.createElement(IonItem, {\n    onClick: function onClick() {\n      setDisableMenu(true);\n      history.push('/tutorial');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(IonIcon, {\n    slot: \"start\",\n    icon: hammer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), \"Show Tutorial\")), React.createElement(IonList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(IonItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(IonLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Dark Theme\"), React.createElement(IonToggle, {\n    checked: darkMode,\n    onClick: function onClick() {\n      return setDarkMode(!darkMode);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })))));\n};\n\nexport default connect({\n  mapStateToProps: function mapStateToProps(state) {\n    return {\n      darkMode: state.user.darkMode,\n      isAuthenticated: state.user.isLoggedin\n    };\n  },\n  mapDispatchToProps: {\n    setDarkMode: setDarkMode\n  },\n  component: withRouter(Menu)\n});","map":{"version":3,"sources":["/home/andrei/itfest2019/ionic-react-conference-app/src/components/Menu.tsx"],"names":["IonContent","IonHeader","IonIcon","IonItem","IonLabel","IonList","IonListHeader","IonMenu","IonMenuToggle","IonTitle","IonToolbar","IonToggle","calendar","contacts","hammer","help","informationCircle","logIn","logOut","map","person","personAdd","React","useState","connect","withRouter","setDarkMode","routes","appPages","title","path","icon","loggedInPages","loggedOutPages","Menu","darkMode","history","isAuthenticated","disableMenu","setDisableMenu","renderlistItems","list","filter","route","p","push","mapStateToProps","state","user","isLoggedin","mapDispatchToProps","component"],"mappings":"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","sourcesContent":["import {\n  IonContent,\n  IonHeader,\n  IonIcon,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonListHeader,\n  IonMenu,\n  IonMenuToggle,\n  IonTitle,\n  IonToolbar,\n  IonToggle\n} from '@ionic/react';\nimport { calendar, contacts, hammer, help, informationCircle, logIn, logOut, map, person, personAdd } from 'ionicons/icons';\nimport React, { useState } from 'react';\nimport { connect } from '../data/connect';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport { setDarkMode } from '../data/user/user.actions';\n\nconst routes = {\n  appPages: [\n    { title: 'Schedule', path: '/tabs/schedule', icon: calendar },\n    { title: 'Speakers', path: '/tabs/speakers', icon: contacts },\n    { title: 'Map', path: '/tabs/map', icon: map },\n    { title: 'About', path: '/tabs/about', icon: informationCircle }\n  ],\n  loggedInPages: [\n    { title: 'Account', path: '/account', icon: person },\n    { title: 'Support', path: '/support', icon: help },\n    { title: 'Logout', path: '/logout', icon: logOut }\n  ],\n  loggedOutPages: [\n    { title: 'Login', path: '/login', icon: logIn },\n    { title: 'Support', path: '/support', icon: help },\n    { title: 'Signup', path: '/signup', icon: personAdd }\n  ]\n};\n\ninterface Pages {\n  title: string,\n  path: string,\n  icon: { ios: string, md: string },\n  routerDirection?: string\n}\ninterface StateProps {\n  darkMode: boolean;\n  isAuthenticated: boolean;\n}\n\ninterface DispatchProps {\n  setDarkMode: typeof setDarkMode\n}\n\ninterface MenuProps extends RouteComponentProps, StateProps, DispatchProps { }\n\nconst Menu: React.FC<MenuProps> = ({ darkMode, history, isAuthenticated, setDarkMode }) => {\n  const [disableMenu, setDisableMenu] = useState(false);\n\n  function renderlistItems(list: Pages[]) {\n    return list\n      .filter(route => !!route.path)\n      .map(p => (\n        <IonMenuToggle key={p.title} auto-hide=\"false\">\n          <IonItem button routerLink={p.path} routerDirection=\"none\">\n            <IonIcon slot=\"start\" icon={p.icon} />\n            <IonLabel>{p.title}</IonLabel>\n          </IonItem>\n        </IonMenuToggle>\n      ));\n  }\n\n  return (\n    <IonMenu type=\"overlay\" disabled={disableMenu} contentId=\"main\">\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Menu</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent class=\"outer-content\">\n        <IonList>\n          <IonListHeader>Navigate</IonListHeader>\n          {renderlistItems(routes.appPages)}\n        </IonList>\n        <IonList>\n          <IonListHeader>Account</IonListHeader>\n          {isAuthenticated ? renderlistItems(routes.loggedInPages) : renderlistItems(routes.loggedOutPages)}\n        </IonList>\n        <IonList>\n          <IonListHeader>Tutorial</IonListHeader>\n          <IonItem onClick={() => {\n            setDisableMenu(true);\n            history.push('/tutorial');\n          }}>\n            <IonIcon slot=\"start\" icon={hammer} />\n            Show Tutorial\n          </IonItem>\n        </IonList>\n        <IonList>\n          <IonItem>\n            <IonLabel>Dark Theme</IonLabel>\n            <IonToggle checked={darkMode} onClick={() => setDarkMode(!darkMode)} />\n          </IonItem>\n        </IonList>\n      </IonContent>\n    </IonMenu>\n  );\n};\n\nexport default connect<{}, StateProps, {}>({\n  mapStateToProps: (state) => ({\n    darkMode: state.user.darkMode,\n    isAuthenticated: state.user.isLoggedin\n  }),\n  mapDispatchToProps: ({\n    setDarkMode\n  }),\n  component: withRouter(Menu)\n})\n"]},"metadata":{},"sourceType":"module"}